/*
	Name: 14_铺地毯
	Copyright: 
	Author: 
	Date: 16-08-17 17:24
	Description: 14_铺地毯
查看 提交 统计 提问
总时间限制: 1000ms 内存限制: 65536kB
描述
为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。
一共有n张地毯，编号从1到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。
地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。
输入输出样例1说明：如下图，1号地毯用实线表示，2号地毯用虚线表示，3号用双实线表示，覆盖点（2，2）的最上面一张地毯是3号地毯。
输入输出样例2说明：如下图，1号地毯用实线表示，2号地毯用虚线表示，3号用双实线表示，覆盖点（4，5）的最上面一张地毯是3号地毯。
输入
输入共n+2行。
第一行，一个整数n，表示总共有n张地毯。
接下来的n行中，第i+1行表示编号i的地毯的信息，包含四个正整数a，b，g，k，每两个整数之间用一个空格隔开，
分别表示铺设地毯的左下角的坐标（a，b）以及地毯在x轴和y轴方向的长度。
第n+2行包含两个正整数x和y，表示所求的地面的点的坐标（x，y）。
对于30%的数据，有n≤2；
对于50%的数据，0≤a, b, g, k≤100；
对于100%的数据，有0≤n≤10,000，0≤a, b, g, k≤100,000。
输出
输出共1行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。
样例输入
样例 #1：
3
1 0 2 3
0 2 3 3
2 1 3 3
2 2
样例 #2：
3
1 0 2 3
0 2 3 3
2 1 3 3
4 5
样例输出
样例 #1：
3
样例 #2：
-1
*/
#include <iostream>

using namespace std;

const int M = 10000;
int A[M], B[M], G[M], K[M];

int main() 
{
	int n, x, y;
	cin >> n;
	for (int i=0; i<n; i++)
		cin >> A[i] >> B[i] >> G[i] >> K[i];
	cin >> x >> y;
	
	for (int i=n-1; i>=0; i--)
	{
		if (A[i]<=x && A[i]+G[i]>=x && B[i]<=y && B[i]+K[i]>=y)
		{
			cout << i + 1 << endl;
			return 0;	
		}
	}
	cout << -1 << endl;
	return 0;	
} 
